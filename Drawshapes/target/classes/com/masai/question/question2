Q2. What Is Spring IOC? Why is it needed?

Answer:-

When a class depends on another class then the dependent class creates the object of its
dependency class directly, and then uses(call) its methods, it is called the dependency object created in the
main control.
But if some external entity is taking care of creating the dependency object then we say that control is inverted
to some external entity, this is called Inversion of Control (IOC).

#decoupling the execution of a task from its implementation.
#making it easier to switch between different implementations.
#greater modularity of a program.
#greater ease in testing a program by isolating a component or mocking its dependencies, and allowing components to communicate 
through contracts.
